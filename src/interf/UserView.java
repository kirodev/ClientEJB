/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/Application.java to edit this template
 */
package interf;

import java.util.ArrayList;
import java.util.Date;
import java.util.Hashtable;
import java.util.List;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.swing.table.DefaultTableModel;

import dao.UserRemote;
import entities.User;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class UserView extends javax.swing.JFrame {

    /**
	 *
	 */
	private static final long serialVersionUID = 1L;
	/**
     * Creates new form UserView
     */
    private UserRemote ur;
    private User u;
    private DefaultTableModel model;
    private List<User> users;
    private int idu;
    public static User selectedUser;
    public UserView() {
        initComponents();
        try {
			ur = UserLookup();
		} catch (NamingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		model = (DefaultTableModel) table.getModel();
		u = new User();
		load();
    }
    public static UserRemote UserLookup() throws NamingException {
		Hashtable<Object, Object> conf = new Hashtable<Object, Object>();
		conf.put(Context.INITIAL_CONTEXT_FACTORY, "org.wildfly.naming.client.WildFlyInitialContextFactory");
		conf.put(Context.PROVIDER_URL, "http-remoting://localhost:8080");
		final Context context = new InitialContext(conf);
		String appName="";
		String moduleName="GestionUsers";
		String beanName="USR";
		String remoteInterface=UserRemote.class.getName();

		String name= "ejb:"+appName+"/"+moduleName+"/"+beanName+"!"+remoteInterface;
		return (UserRemote) context.lookup("ejb:/GestionUsers/UserImpl!dao.UserRemote");
	}

    void load() {
		users = new ArrayList<User>(ur.findAll());
		for (User u : users) {
			model.addRow(new Object[] { u.getId(), u.getNom(), u.getPrenom(), u.getEmail(), u.getTele(),
					u.getDateN() });
		}
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        telephone = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        prenom = new javax.swing.JTextField();
        nom = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nom");

        jLabel2.setText("Prenom");

        jLabel3.setText("Email");

        jLabel4.setText("Telephone");

        jLabel5.setText("Date Naissance");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Nom", "Prenom", "Telephone", "Email", "Date"
            }
        ) {
            /**
			 *
			 */
			boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jButton1.setText("Create");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        PhonesBtn = new JButton("Phones");
        PhonesBtn.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if(nom.getText()==null||prenom.getText()==null||email.getText()==null||telephone.getText()==null||date.getDate()==null)
        		{
        			JOptionPane.showMessageDialog(null, "Select User");

        		}
        		else {
        			selectedUser = ur.findByEmail(email.getText());
        			SmartphoneView uPhone = new SmartphoneView();
        			uPhone.setVisible(true);
        			setVisible(false);

        		}

        	}
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addGap(90)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(jLabel5)
        						.addComponent(jLabel3)
        						.addComponent(jLabel4)
        						.addComponent(jLabel1)
        						.addComponent(jLabel2))
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(prenom, GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
        						.addComponent(nom)
        						.addComponent(telephone, GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
        						.addComponent(email, GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
        						.addComponent(date, GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addGroup(layout.createSequentialGroup()
        							.addGap(242)
        							.addComponent(jButton1)
        							.addGap(31)
        							.addComponent(jButton2)
        							.addGap(27)
        							.addComponent(jButton3))
        						.addGroup(Alignment.TRAILING, layout.createSequentialGroup()
        							.addGap(323)
        							.addComponent(PhonesBtn, GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
        							.addGap(71))))
        				.addGroup(layout.createSequentialGroup()
        					.addGap(52)
        					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 687, GroupLayout.PREFERRED_SIZE)))
        			.addGap(41))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(88)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        				.addGroup(layout.createSequentialGroup()
        					.addGap(18)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(jButton1)
        						.addComponent(jButton2)
        						.addComponent(jButton3)))
        				.addGroup(layout.createSequentialGroup()
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(jLabel1)
        						.addComponent(nom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(jLabel2)
        						.addComponent(prenom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addPreferredGap(ComponentPlacement.RELATED)))
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addGap(18)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(jLabel4)
        						.addComponent(telephone, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addGap(18)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(jLabel3)
        						.addComponent(email, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addGap(18)
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(jLabel5)
        						.addComponent(date, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        				.addGroup(layout.createSequentialGroup()
        					.addGap(18)
        					.addComponent(PhonesBtn)))
        			.addPreferredGap(ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
        			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 118, GroupLayout.PREFERRED_SIZE)
        			.addGap(46))
        );
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        u = new User(nom.getText().toString(),prenom.getText().toString(),telephone.getText().toString(),email.getText().toString()
        ,date.getDate());
	    ur.Create(u);
        model.setRowCount(0);
        load();
        JOptionPane.showMessageDialog(null, "Added successfully !");
    }

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int rowtable = table.getSelectedRow();
		idu = (Integer) model.getValueAt(rowtable, 0);
		nom.setText(model.getValueAt(rowtable, 1).toString());
		prenom.setText(model.getValueAt(rowtable, 2).toString());
		email.setText(model.getValueAt(rowtable, 3).toString());
		telephone.setText(model.getValueAt(rowtable, 4).toString());
		date.setDate((Date) model.getValueAt(rowtable, 5));
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        u = new User(nom.getText().toString(),prenom.getText().toString(),telephone.getText().toString(),email.getText().toString()
        ,date.getDate());
			u.getId();
			ur.Update(u);
			model.setRowCount(0);
			load();
	        JOptionPane.showMessageDialog(null, "Updated successfully !");

    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
	ur.deleteById(idu);
	model.setRowCount(0);
	load();
    JOptionPane.showMessageDialog(null, "Deleted successfully !");

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JTextField email;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nom;
    private javax.swing.JTextField prenom;
    private javax.swing.JTable table;
    private javax.swing.JTextField telephone;
    private JButton PhonesBtn;
    // End of variables declaration

}